name: SpectraMind V50 CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  setup:
    name: Setup (Python, Poetry, cache)
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.meta.outputs.python-version }}
    steps:
      - uses: actions/checkout@v4
      - id: meta
        run: echo "python-version=3.11" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Configure Poetry
        run: poetry config virtualenvs.create false
      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install deps
        run: |
          if [ -f pyproject.toml ]; then poetry install --no-root; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  lint:
    name: Lint & Pre-commit
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Poetry & pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install poetry pre-commit
          poetry config virtualenvs.create false
          poetry install --no-root || true
      - name: Run pre-commit
        run: pre-commit run --all-files || (git status && git diff && exit 1)
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root || true
      - name: PyTest
        run: |
          if [ -f pytest.ini ] || [ -d tests ]; then poetry run pytest -q; else echo "No tests/ found; skipping."; fi
  selftest:
    name: SpectraMind Selftest (fast)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root || true
      - name: Run CLI selftest and collect artifacts
        run: bash scripts/ci_selftest.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: diagnostics-artifacts
          path: |
            artifacts/
            v50_debug_log.md
          if-no-files-found: ignore
  docs:
    name: Build Docs (MkDocs)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Poetry + MkDocs
        run: |
          python -m pip install --upgrade pip
          pip install poetry mkdocs mkdocs-material
          poetry config virtualenvs.create false
          poetry install --no-root || true
      - name: Build docs
        run: |
          if [ -f mkdocs.yml ]; then mkdocs build --strict; else echo "mkdocs.yml not found; skipping docs"; fi
      - name: Upload site
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site
          if-no-files-found: ignore
  submit_dryrun:
    name: Submission Dry-run Gate
    runs-on: ubuntu-latest
    needs: [setup, lint, tests, selftest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root || true
      - name: Submission dry-run
        run: |
          if [ -f spectramind.py ]; then
            poetry run python -m spectramind submit make --dry-run || true
          else
            echo "spectramind.py not found; skipping submit dry-run"
          fi

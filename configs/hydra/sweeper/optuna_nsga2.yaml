# Hydra Optuna Sweeper (NSGA-II) for Multi-Objective Optimization
# Optimize for both GLL (primary) and expected calibration error (ECE) or negative coverage gap.
# Your training loop should report multiple objectives via Hydra/MLflow bridge or stdout capture.
# Usage:
# python -m spectramind.cli.spectramind train -m hydra/sweeper=optuna_nsga2
# Notes:
# - directions: [minimize, minimize]
# - Ensure your objective wrapper returns two metrics in order.

defaults:
  - override /hydra/sweeper: optuna

hydra:
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    direction:
      - minimize   # objective_0: GLL
      - minimize   # objective_1: ECE (or calibration error)
    study_name: spectramind_v50_optuna_nsga2
    storage: null
    n_trials: 96
    n_jobs: 1
    sampler:
      _target_: optuna.samplers.NSGAIISampler
      seed: 42
    pruner:
      _target_: optuna.pruners.NopPruner
    params:
      training.lr: tag(log, interval(1e-5, 3e-3))
      training.weight_decay: tag(log, interval(1e-6, 1e-3))
      model.dropout: interval(0.0, 0.4)
      model.encoder_dim: choice(384, 512, 640, 768)
      calib.temperature_init: interval(0.75, 2.0)
      calib.corel.weight: tag(log, interval(5e-4, 1e-1))

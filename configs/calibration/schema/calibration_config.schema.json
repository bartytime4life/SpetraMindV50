{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SpectraMind V50 Calibration Config (Rendered)",
  "type": "object",
  "required": ["calib"],
  "properties": {
    "calib": {
      "type": "object",
      "required": ["version","paths","io","policies","steps","logging","runtime","repro"],
      "properties": {
        "version": { "type": "string" },
        "paths": {
          "type": "object",
          "required": ["root","raw","work","out","logs","cache"],
          "properties": {
            "root": { "type": "string" },
            "raw":  { "type": "string" },
            "work": { "type": "string" },
            "out":  { "type": "string" },
            "logs": { "type": "string" },
            "cache":{ "type": "string" }
          }
        },
        "io": {
          "type": "object",
          "required": ["loader_workers","prefetch_workers","pin_memory","dtype","cache"],
          "properties": {
            "loader_workers": { "type": "integer", "minimum": 0 },
            "prefetch_workers": { "type": "integer", "minimum": 0 },
            "pin_memory": { "type": "boolean" },
            "dtype": { "type": "string", "enum": ["float16","float32","float64"] },
            "chunks": {
              "type": "object",
              "properties": {
                "enable": { "type": "boolean" },
                "size_time": { "type": "integer", "minimum": 1 },
                "overlap": { "type": "integer", "minimum": 0 }
              }
            },
            "cache": {
              "type": "object",
              "required": ["enable","policy","max_gb"],
              "properties": {
                "enable": { "type": "boolean" },
                "policy": { "type": "string", "enum": ["auto","force","off"] },
                "max_gb": { "type": "number", "minimum": 0 }
              }
            }
          }
        },
        "policies": { "type": "object" },
        "steps":   { "type": "object" },
        "logging": {
          "type": "object",
          "required": ["level","console","file","jsonl"],
          "properties": {
            "level": { "type": "string", "enum": ["DEBUG","INFO","WARNING","ERROR"] },
            "console": { "type": "boolean" },
            "file": {
              "type": "object",
              "required": ["enable","path","rotate_mb","keep"],
              "properties": {
                "enable": { "type": "boolean" },
                "path": { "type": "string" },
                "rotate_mb": { "type": "number", "minimum": 1 },
                "keep": { "type": "integer", "minimum": 1 }
              }
            },
            "jsonl": {
              "type": "object",
              "required": ["enable","path"],
              "properties": {
                "enable": { "type": "boolean" },
                "path": { "type": "string" }
              }
            }
          }
        },
        "runtime": {
          "type": "object",
          "required": ["max_hours","fail_fast","dry_run","deterministic"],
          "properties": {
            "max_hours": { "type": "number", "minimum": 0 },
            "fail_fast": { "type": "boolean" },
            "dry_run": { "type": "boolean" },
            "deterministic": { "type": "boolean" }
          }
        },
        "repro": {
          "type": "object",
          "required": ["capture","outputs_manifest"],
          "properties": {
            "capture": {
              "type": "object",
              "required": ["git","env","pip_freeze","hydra_config_dump"],
              "properties": {
                "git": { "type": "boolean" },
                "env": { "type": "boolean" },
                "pip_freeze": { "type": "boolean" },
                "hydra_config_dump": { "type": "boolean" }
              }
            },
            "outputs_manifest": { "type": "string" }
          }
        }
      }
    }
  },
  "additionalProperties": true
}

# Quantile head: predicts (q10, q50, q90) per bin, with monotonic penalties.
# This can be used standalone or ensembled with flow head.
model:
  sigma_decoder:
    name: quantile
    enabled: true
    hidden_dims: [512, 256]
    dropout: 0.05
    activation: "gelu"
    norm: "layernorm"
    quantiles: [0.10, 0.50, 0.90]
    # Enforce q10 <= q50 <= q90 with a hinge-like penalty during training.
    monotonicity:
      enabled: true
      weight: 5.0e-3
      # Soft margin in ppm to tolerate tiny ordering noise:
      soft_margin_ppm: 0.25
    # Convert quantiles to σ proxy at inference (e.g., via robust scale).
    # sigma ≈ (q90 - q10) / 2.563 (IQR-to-σ for normal ≈ 2*0.6745 = 1.349; using 2.563 for robustness)
    infer_sigma_from_quantiles:
      enabled: true
      scale_divisor: 2.563
    # Floors in ppm (post-conversion)
    sigma_min_ppm:
      fgs1: 1.0
      airs: 10.0

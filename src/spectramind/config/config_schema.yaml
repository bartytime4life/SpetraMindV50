$schema: "http://json-schema.org/draft-07/schema#"
title: "SpectraMind V50 Configuration Schema"
type: object
properties:
  model:
    type: object
    properties:
      encoder:
        type: string
        description: "Name of primary encoder module (e.g., 'fgs1_mamba')."
      encoder_params:
        type: object
        description: "Hyperparameters for encoder."
      airs_gnn:
        type: object
        description: "AIRS spectral GNN configuration (e.g., GAT with edge features)."
        properties:
          type:
            type: string
          heads:
            type: integer
            minimum: 1
          hidden_dim:
            type: integer
            minimum: 1
          edge_features:
            type: boolean
        additionalProperties: true
      decoder:
        type: string
        description: "Decoder name (e.g., 'multi_scale_decoder')."
      decoder_params:
        type: object
        description: "Parameters for mu/sigma decoders and fusion heads."
      params:
        type: object
        description: "Generic legacy params block (optional; kept for backward compatibility)."
    required: ["encoder", "decoder"]
    additionalProperties: true

  training:
    type: object
    properties:
      epochs:
        type: integer
        minimum: 1
      batch_size:
        type: integer
        minimum: 1
      lr:
        type: number
        minimum: 0
      optimizer:
        type: string
      weight_decay:
        type: number
        minimum: 0
      amp:
        type: boolean
      scheduler:
        type: object
        properties:
          type:
            type: string
          warmup_epochs:
            type: integer
            minimum: 0
        additionalProperties: true
      gradient_accumulation_steps:
        type: integer
        minimum: 1
      save_every:
        type: integer
        minimum: 1
      log_every:
        type: integer
        minimum: 1
      curriculum:
        type: object
        properties:
          mae_pretrain: {type: boolean}
          contrastive: {type: boolean}
          symbolic_finetune: {type: boolean}
        additionalProperties: true
    required: ["epochs", "batch_size"]
    additionalProperties: true

  calibration:
    type: object
    properties:
      method:
        type: string
      corel_params:
        type: object
        properties:
          edge_features: {type: boolean}
          temporal_bin_encoding: {type: string}
          coverage_target:
            type: number
            minimum: 0
            maximum: 1
          symbolic_weighting: {type: boolean}
        additionalProperties: true
    additionalProperties: true

  diagnostics:
    type: object
    properties:
      run_gll: {type: boolean}
      run_fft: {type: boolean}
      run_shap: {type: boolean}
      run_symbolic_overlay: {type: boolean}
      run_umap: {type: boolean}
      run_tsne: {type: boolean}
      html_report: {type: boolean}
    additionalProperties: true

  symbolic:
    type: object
    properties:
      enable_constraints: {type: boolean}
      constraints:
        type: object
        properties:
          smoothness_weight: {type: number, minimum: 0}
          asymmetry_weight: {type: number, minimum: 0}
          nonnegativity_weight: {type: number, minimum: 0}
          photonic_alignment_weight: {type: number, minimum: 0}
        additionalProperties: true
    additionalProperties: true

  env:
    type: object
    properties:
      device: {type: string}
      num_workers: {type: integer, minimum: 0}
    additionalProperties: true

required: ["model", "training"]
additionalProperties: true

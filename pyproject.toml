[tool.poetry]
name = "spectramindv50"
version = "0.1.0"
description = "Neuro-symbolic, physics-informed pipeline for the NeurIPS 2025 Ariel Data Challenge."
authors = ["SpectraMind Team <maintainers@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "spectramind", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
typer = "^0.12.3"
hydra-core = "^1.3.2"
rich = "^13.7.1"
loguru = "^0.7.2"
pydantic = "^2.8.2"
pyyaml = "^6.0.2"
numpy = "^2.1.0"
scipy = "^1.14.1"
pandas = "^2.2.2"
matplotlib = "^3.9.0"
plotly = "^5.23.0"
umap-learn = "^0.5.6"
scikit-learn = "^1.5.1"
mlflow = "^2.15.1"
wandb = { version = "^0.17.5", optional = true }
orjson = "^3.10.7"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
ruff = "^0.6.9"
black = "^24.8.0"
isort = "^5.13.2"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.29"
pre-commit = "^3.8.0"

[tool.pytest.ini_options]
addopts = "-q --disable-warnings"
testpaths = ["tests"]

[tool.ruff]
line-length = 100
target-version = "py310"
extend-select = ["I", "W", "E", "F", "UP", "B", "A", "PL", "RUF"]
ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"
